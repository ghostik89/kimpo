#pragma once
#include <map>
#include <string>
#include <vector>
using namespace std;

const vector<pair<string, char>> Dictionary = {
	{".-", 'А'}, {"-...", 'Б'}, {".--", 'В'},
	{"--.",'Г'}, {"-..",'Д'}, {".",'Е'},
	{"...-",'Ж'}, {"--..",'З'}, {"..",'И'},
	{".---",'Й'}, {"-.-",'К'}, {".-..",'Л'},
	{"--",'М'}, {"-.",'Н'}, {"---",'О'},
	{".--.",'П'}, {".-.",'Р'}, {"...",'С'},
	{"-",'Т'}, {"..-",'У'}, {"..-.",'Ф'},
	{"....",'Х'}, {"-.-.",'Ц'}, {"---.",'Ч'},
	{"----",'Ш'}, {"--.-",'Щ'}, {".--.-.",'Ъ'},
	{"-.--",'Ы'}, {"-..-",'Ь'}, {"...-..." , 'Э'},
	{"..--" , 'Ю'}, {".-.-" , 'Я'}, {"-----" , '0'},
	{".----" , '1'}, {"..---" , '2'}, {"...--" , '3'},
	{"....-" , '4'}, {"....." , '5'}, {"-...." , '6'},
	{"--..." , '7'}, {"---.." , '8'}, {"----." , '9'},
};

const int MAX_SIZE = 256;

/*!	Поиск возможных вариантов перевода с азубки Морзе на русский
	param[in]: DecodeString - исходная строка, зашифрованная в азбуке Морзе
	param[in|out]: DecodedVariants - вектор расшифрованных вариантов
	param[in]: BuildString - строка для временного хранения промежуточных данных расшифорвки
*/
void DecodeMorze(const string& DecodeString, vector<string>& DecodedVariants, const string& BuildString);

/*! Проверка на посторонние символы в сообщении на азбуке Морзе
	param[in]: CheckedString - строка, которая проверяется на наличие посторонних символов
	return: имеет ли строка просторонние символы(true - имеет, false - не имеет)
*/
bool CheckStringForInvalidChar(const string& CheckedString);
